{"version":3,"file":"static/js/677.1bac4097.chunk.js","mappings":"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","sources":["Api/Api.jsx","webpack://react-homework-template/./src/components/DetailsInfo/DetailsInfo.module.css?bc27","components/DetailsInfo/DetailsInfo.jsx","webpack://react-homework-template/./src/components/Additional/Additional.module.css?e277","components/Additional/Additional.jsx","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '1d6ccb96bef0945cd43d51d678e594b7';\n\nexport const getTrendMovies = () => {\n  try {\n    const response = axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${KEY}`\n    );\n    if (response.results === {}) {\n      throw new Error('error');\n    }\n\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMoviesBySearch = query => {\n  return axios(`${BASE_URL}search/movie`, {\n    params: {\n      api_key: KEY,\n      query: query,\n    },\n  });\n};\n\nexport const getMovieInfo = id => {\n  try {\n    const response = axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY}`);\n    if (response.results === {}) {\n      throw new Error('error');\n    }\n\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getCredits = id => {\n  try {\n    const response = axios.get(`${BASE_URL}movie/${id}/credits?api_key=${KEY}`);\n\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = id => {\n  try {\n    const response = axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${KEY}`);\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\ngetMoviesBySearch.propTypes = PropTypes.string.isRequired;\ngetMovieInfo.propTypes = PropTypes.number.isRequired;\ngetCredits.propTypes = PropTypes.number.isRequired;\ngetReviews.propTypes = PropTypes.number.isRequired;\n","// extracted by mini-css-extract-plugin\nexport default {\"info\":\"DetailsInfo_info__tK1yw\",\"text\":\"DetailsInfo_text__9ZF3A\",\"textInfo\":\"DetailsInfo_textInfo__i4vmp\",\"button\":\"DetailsInfo_button__YSNcn\",\"score\":\"DetailsInfo_score__u-Y8P\",\"title\":\"DetailsInfo_title__jYKdw\",\"date\":\"DetailsInfo_date__MEGM6\",\"description\":\"DetailsInfo_description__PjZWI\",\"image\":\"DetailsInfo_image__SNjVN\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from './DetailsInfo.module.css';\n\nconst DetailsInfo = ({ movie }) => {\n  const location = useLocation();\n  const date = [movie.release_date];\n  let release_date = 0;\n\n  if (date[0] !== undefined) {\n    const release = date[0].split('-')[0];\n    release_date = release;\n  }\n  return (\n    <>\n      {movie.length !== 0 && (\n        <section>\n          <Link to={location.state ?? '/movies'}>\n            <button className={s.button}>Go Back</button>\n          </Link>\n\n          <div className={s.info}>\n            {movie.poster_path && (\n              <img\n                className={s.image}\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt={movie.title}\n              />\n            )}\n            <div className={s.text}>\n              <h2 className={s.title}>\n                {movie.title} <span className={s.date}>({release_date})</span>\n              </h2>\n              <p>\n                <span className={s.description}>User Score: </span>{' '}\n                <span className={s.score}>\n                  {(movie.vote_average * 10).toFixed(0)} %\n                </span>\n              </p>\n              <p className={s.description}>Overview:</p>\n              <p className={s.textInfo}>{movie.overview}</p>\n              <div>\n                <p className={s.description}>Genres: </p>\n                <ul>\n                  {movie.genres &&\n                    movie.genres.map(genre => (\n                      <li key={genre.id}>{genre.name}</li>\n                    ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n    </>\n  );\n};\n\nDetailsInfo.propTypes = PropTypes.array.isRequired;\n\nexport default DetailsInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Additional_title__o1dZ9\",\"link\":\"Additional_link__nJqCk\",\"section\":\"Additional_section__59YPs\",\"item\":\"Additional_item__HS-ND\"};","import { NavLink, useLocation } from 'react-router-dom';\nimport s from './Additional.module.css';\n\nconst Additional = () => {\n  const location = useLocation();\n  const backLinkHref = location.state ?? '/movies';\n\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>Additional information</h2>\n      <ul>\n        <li className={s.item}>\n          <NavLink to=\"cast\" state={backLinkHref} className={s.link}>\n            Cast\n          </NavLink>\n        </li>\n        <li className={s.item}>\n          <NavLink to=\"reviews\" state={backLinkHref} className={s.link}>\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n    </section>\n  );\n};\n\nexport default Additional;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"title\":\"Cast_title__0cH9s\",\"character\":\"Cast_character__tKDlA\",\"text\":\"Cast_text__P2vgu\",\"profileInfo\":\"Cast_profileInfo__CmyME\",\"card\":\"Cast_card__WlXfx\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getCredits } from 'Api/Api';\nimport s from './Cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCredits(movieId)\n      .then(response => setCast(response.data.cast))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <>\n      {cast !== [] && (\n        <ul className={s.list}>\n          {cast.map(\n            el =>\n              el.profile_path && (\n                <li key={el.id} className={s.card}>\n                  {el.profile_path && (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w500${el.profile_path}`}\n                      alt={el.name}\n                    />\n                  )}\n                  <div className={s.profileInfo}>\n                    <h3 className={s.title}>{el.name}</h3>\n                    <p className={s.character}>\n                      Character: <span className={s.text}> {el.character}</span>\n                    </p>\n                  </div>\n                </li>\n              )\n          )}\n        </ul>\n      )}\n    </>\n  );\n};\n\nCast.propTypes = PropTypes.func.isRequired;\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Reviews_title__t265C\",\"text\":\"Reviews_text__EqLvx\",\"item\":\"Reviews_item__DJKij\",\"alert\":\"Reviews_alert__COYRd\",\"review\":\"Reviews_review__sHbuN\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getReviews } from 'Api/Api';\nimport s from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(movieId).then(response => {\n      setReviews(response.data.results);\n    });\n  }, [movieId]);\n\n  return (\n    <div className={s.review}>\n      {reviews.length === 0 ? (\n        <p className={s.alert}>\n          Sorry: \"We don't have any reviews for this movie.\"\n        </p>\n      ) : (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id} className={s.item}>\n              <h3 className={s.title}>Author: {review.author}</h3>\n              <p className={s.text}>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nReviews.propTypes = PropTypes.func.isRequired;\n\nexport default Reviews;\n","import { useState, useEffect } from 'react';\nimport { useParams, Routes, Route } from 'react-router-dom';\nimport { getMovieInfo } from 'Api/Api';\nimport DetailsInfo from 'components/DetailsInfo/DetailsInfo';\nimport Additional from 'components/Additional/Additional';\nimport Cast from 'components/Cast/Cast';\nimport Reviews from 'components/Reviews/Reviews';\n\nconst MoviesInfo = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n\n  useEffect(() => {\n    getMovieInfo(movieId)\n      .then(response => {\n        setMovie(response.data);\n      })\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && <DetailsInfo movie={movie} />}\n      <Additional />\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </>\n  );\n};\n\nexport default MoviesInfo;\n"],"names":["BASE_URL","KEY","getTrendMovies","response","axios","results","Error","error","getMoviesBySearch","query","params","api_key","getMovieInfo","id","getCredits","console","log","getReviews","propTypes","PropTypes","movie","location","useLocation","date","release_date","undefined","split","length","to","state","className","s","poster_path","src","alt","title","vote_average","toFixed","overview","genres","map","genre","name","backLinkHref","useState","cast","setCast","movieId","useParams","useEffect","then","data","catch","el","profile_path","character","reviews","setReviews","review","author","content","setMovie","err","path","element"],"sourceRoot":""}